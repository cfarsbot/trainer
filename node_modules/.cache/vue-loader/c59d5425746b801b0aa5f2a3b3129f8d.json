{"remainingRequest":"/home/christopher/Projects/trainer/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/christopher/Projects/trainer/vue/src/components/curd_table.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/christopher/Projects/trainer/vue/src/components/curd_table.vue","mtime":1614615283274},{"path":"/home/christopher/Projects/trainer/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/christopher/Projects/trainer/vue/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/christopher/Projects/trainer/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/christopher/Projects/trainer/vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICdheGlvcycKaW1wb3J0IGNvbmZpZyBmcm9tICcuLi8uLi9jb25maWcnCmltcG9ydCB1c2VyX3N0b3JlIGZyb20gJy4uL3N0b3JlL3VzZXInCiAgICBleHBvcnQgZGVmYXVsdCB7CiAgICAgIHByb3BzOiBbJ3dvcmRzJywgJ2xpc3RfbmFtZScsICdsaXN0X2lkJ10sCiAgICAgIGRhdGE6ICgpID0+ICh7CiAgICAgIGNvbmRpdGlvbjogZmFsc2UsCiAgICAgIGRpYWxvZzogZmFsc2UsCiAgICAgIGRpYWxvZ0RlbGV0ZTogZmFsc2UsCiAgICAgIGRpYWxvZ0RlbGV0ZUxpc3Q6IGZhbHNlLAogICAgICBoZWFkZXJzOiBbCiAgICAgICAgewogICAgICAgICAgdGV4dDogJ0RldXRzY2gnLAogICAgICAgICAgYWxpZ246ICdzdGFydCcsCiAgICAgICAgICBzb3J0YWJsZTogdHJ1ZSwKICAgICAgICAgIHZhbHVlOiAnZGUnLAogICAgICAgIH0sCiAgICAgICAgeyB0ZXh0OiAnRW5nbGlzY2gnLCB2YWx1ZTogJ2VuJyB9LAogICAgICAgIHsgdGV4dDogJ0FjdGlvbnMnLCB2YWx1ZTogJ2FjdGlvbnMnLCBzb3J0YWJsZTogdHJ1ZSB9LAogICAgICBdLAogICAgICBlZGl0ZWRJbmRleDogLTEsCiAgICAgIGVkaXRlZEl0ZW06IHsKICAgICAgICBkZTogJycsCiAgICAgICAgZW46ICcnLAogICAgICAgIGlkOiAnJywKICAgICAgfSwKICAgICAgZGVmYXVsdEl0ZW06IHsKICAgICAgICBkZTogJycsCiAgICAgICAgZW46ICcnLAogICAgICB9LAogICAgfSksCgogICAgY29tcHV0ZWQ6IHsKICAgICAgZm9ybVRpdGxlICgpIHsKICAgICAgICByZXR1cm4gdGhpcy5lZGl0ZWRJbmRleCA9PT0gLTEgPyAnV8O2cnRlciBIaW56dWbDvGdlbicgOiAnQmVhcmJlaXRlbicKICAgICAgfSwKICAgIH0sCgogICAgd2F0Y2g6IHsKICAgICAgZGlhbG9nICh2YWwpIHsKICAgICAgICB2YWwgfHwgdGhpcy5jbG9zZSgpCiAgICAgIH0sCiAgICAgIGRpYWxvZ0RlbGV0ZSAodmFsKSB7CiAgICAgICAgdmFsIHx8IHRoaXMuY2xvc2VEZWxldGUoKQogICAgICB9LAogICAgfSwKCiAgICBtZXRob2RzOiB7CgogICAgICAKCiAgICAgIHVwZGF0ZVdvcmQod29yZCl7CiAgICAgICAgdmFyIHVzZXIgPSB1c2VyX3N0b3JlLmdldHRlcnMudXNlcgogICAgICAgICAgYXhpb3MucGF0Y2goYCR7Y29uZmlnLnByb3RvY29sfTovLyR7Y29uZmlnLmhvc3RuYW1lfS91cGRhdGVfd29yZGxpc3RgLCB7CiAgICAgICAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nfSwKICAgICAgICAgICAgICAgICAgICAgICAgd29yZCwKICAgICAgICAgICAgICAgICAgICAgICAgdXNlcgoKICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICAgICAgICAudGhlbiggcmVzcG9uc2UgPT4gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YSk7ICAKICAgICAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICAgICAgLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yKQogICAgICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgfSwKCiAgICAgIC8vIHRha2VzIHRoZSB3b3JkLCBsaXN0X2lkIG9mIHRoZSB3b3JkIGFuZCByZWFkcyB1c2VyIGZyb20gc3RvcmUKICAgICAgLy8gY3JlYXRlcyBldmVudCB0byB1cGRhdGUgdGhlIGNvbXBvbmVudAogICAgICBhZGRXb3JkKHdvcmQsIGxpc3RfaWQpewogICAgICAgIHZhciB1c2VyID0gdXNlcl9zdG9yZS5nZXR0ZXJzLnVzZXIKICAgICAgICBheGlvcy5wdXQoYCR7Y29uZmlnLnByb3RvY29sfTovLyR7Y29uZmlnLmhvc3RuYW1lfS91cGRhdGVfd29yZGxpc3RgLCB7CiAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgaGVhZGVyczogeydDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbid9LAogICAgICAgICAgICAgICAgICAgICAgICB3b3JkLAogICAgICAgICAgICAgICAgICAgICAgICB1c2VyLAogICAgICAgICAgICAgICAgICAgICAgICBsaXN0X2lkCiAgICAgICAgICAgICAgICAgICAgICAgIAoKICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICAgICAgICAudGhlbiggcmVzcG9uc2UgPT4gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YSkgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gbmVlZCB0byB1cGRhdGUgdGhlIGNhY2hlZCBsaXN0LCBiZWNhdXNlIGEgbmV3IHVpIGZvciB0aGUgY3JlYXRlZCB3b3JkIG5lZWRzIHRvIGJlIGdlbmVyYXRlZAogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy4kZW1pdCgidXBkYXRlIiwgcmVzcG9uc2UuZGF0YSkKICAgICAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICAgICAgLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yKQogICAgICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgfSwKCiAgICAgIGRlbGV0ZVdvcmQod29yZCl7CiAgICAgICAgLy8gcmVhZCB1c2VyIGZyb20gc3RvcmUKICAgICAgICB2YXIgdXNlciA9IHVzZXJfc3RvcmUuZ2V0dGVycy51c2VyCiAgICAgICAgICAgICAgICAvLyBheGlvcyB3YW50cyB0aGUgZGF0YSB0byBiZSBkZWxldGVkIGluc2lkZSB0aGUgZGF0YSBPYmplY3QuLi4gaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9hLzUzMjYzNzg0CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyh3b3JkKQogICAgICAgICAgICAgICAgYXhpb3MuZGVsZXRlKGAke2NvbmZpZy5wcm90b2NvbH06Ly8ke2NvbmZpZy5ob3N0bmFtZX0vdXBkYXRlX3dvcmRsaXN0YCwgeyAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICBkYXRhOnsKICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyLAogICAgICAgICAgICAgICAgICAgICAgICAgIHdvcmQKICAgICAgICAgICAgICAgICAgICAgICAgfQoKCiAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICAgICAgLnRoZW4oIHJlc3BvbnNlID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlLmRhdGEpOyAgCiAgICAgICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgICAgICAgIC5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvcikKICAgICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgIH0sCiAgICAgIAogICAgCiAgIAogICAgICAvLyBlZGl0IHdvcmQgcGFpciBpbiBPYmplY3Qgd29yZHMKICAgICAgLy8gaXRlbSA9IHNlbGVjdGVkIGVsZW1lbnQKICAgICAgZWRpdEl0ZW0gKGl0ZW0pIHsKICAgICAgICB0aGlzLmVkaXRlZEluZGV4ID0gdGhpcy53b3Jkcy5pbmRleE9mKGl0ZW0pCiAgICAgICAgdGhpcy5lZGl0ZWRJdGVtID0gT2JqZWN0LmFzc2lnbih7fSwgaXRlbSkKICAgICAgICB0aGlzLmRpYWxvZyA9IHRydWUKICAgICAgfSwKICAgICAgCiAgICAgIC8vIGRlbGV0ZSB3b3JkIHBhaXIgaW4gT2JqZWN0IHdvcmRzCiAgICAgIC8vIGl0ZW0gPSBzZWxlY3RlZCBlbGVtZW50CiAgICAgIGRlbGV0ZUl0ZW0gKGl0ZW0pIHsKICAgICAgICB0aGlzLmVkaXRlZEluZGV4ID0gdGhpcy53b3Jkcy5pbmRleE9mKGl0ZW0pCiAgICAgICAgdGhpcy5lZGl0ZWRJdGVtID0gT2JqZWN0LmFzc2lnbih7fSwgaXRlbSkKICAgICAgICB0aGlzLmRpYWxvZ0RlbGV0ZSA9IHRydWUKICAgICAgfSwKICAgICAgLy8gc2hvdyAiZG8geW91IHdhbm5hIHJlYWx5IGRlbGV0ZSIgcGFuZWwKICAgICAgZGVsZXRlTGlzdCgpewogICAgICAgIHRoaXMuZGlhbG9nRGVsZXRlTGlzdCA9IHRydWUKICAKICAgICAgfSwKCiAgICAgIC8vIGNyZWF0ZSBldmVudCB0byBkZWxldGUgd29yZHNbXQogICAgICAvLyBjb21wb25lbnQgZ2V0cyByZWZyZXNoZWQgYnkgcGFycmVudCAKICAgICAgZGVsZXRlTGlzdENvbmZpcm0oKXsKICAgICAgICAvLyB0aGlzLndvcmRzID0gIiIKICAgICAgICB0aGlzLiRlbWl0KCJkZWxldGUtbGlzdCIsIHRoaXMubGlzdF9pZCkKICAgICAgICB0aGlzLmRpYWxvZ0RlbGV0ZUxpc3QgPSBmYWxzZQogICAgICB9LAoKICAgICAgLy8gcmVtb3ZlIGVsZW1lbnQgZnJvbSB3b3Jkc1tdCiAgICAgIGRlbGV0ZUl0ZW1Db25maXJtICgpIHsKICAgICAgICB0aGlzLndvcmRzLnNwbGljZSh0aGlzLmVkaXRlZEluZGV4LCAxKQogICAgICAgIGNvbnNvbGUubG9nKCJEZWxldGUiKQogICAgICAgIHRoaXMuZGVsZXRlV29yZCh0aGlzLmVkaXRlZEl0ZW0pCiAgICAgICAgdGhpcy5jbG9zZURlbGV0ZSgpCiAgICAgIH0sCgogICAgICAvLyBjbG9zZXMgZWRpdCB3b3JkcyBwYW5lbAogICAgICBjbG9zZSAoKSB7CiAgICAgICAgdGhpcy5kaWFsb2cgPSBmYWxzZQogICAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsKICAgICAgICAgIHRoaXMuZWRpdGVkSXRlbSA9IE9iamVjdC5hc3NpZ24oe30sIHRoaXMuZGVmYXVsdEl0ZW0pCiAgICAgICAgICB0aGlzLmVkaXRlZEluZGV4ID0gLTEKICAgICAgICB9KQogICAgICB9LAoKICAgICAgLy8gY2xvc2UgZGVsZXRlIHdvcmRzIHBhbmVsCiAgICAgIGNsb3NlRGVsZXRlICgpIHsKICAgICAgICB0aGlzLmRpYWxvZ0RlbGV0ZSA9IGZhbHNlCiAgICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gewogICAgICAgICAgdGhpcy5lZGl0ZWRJdGVtID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5kZWZhdWx0SXRlbSkKICAgICAgICAgIHRoaXMuZWRpdGVkSW5kZXggPSAtMQoKICAgICAgICB9KQogICAgICB9LAoKICAgICAgc2F2ZSAoKSB7CiAgICAgICAgaWYgKHRoaXMuZWRpdGVkSW5kZXggPiAtMSkgewogICAgICAgICAgLy8gY2FsbGVkIHdoZW4gd29yZHMgZ2V0IGVkaXRlZAogICAgICAgICAgLy8gZXhpc3Rpbmcgd29yZHMgYXJlIGluIHRoZSBlZGl0ZWRJbmRleCByYW5nZSBmcm9tIDAgdG8gbisxCiAgICAgICAgICBPYmplY3QuYXNzaWduKHRoaXMud29yZHNbdGhpcy5lZGl0ZWRJbmRleF0sIHRoaXMuZWRpdGVkSXRlbSkKICAgICAgICAgIHRoaXMudXBkYXRlV29yZCh0aGlzLmVkaXRlZEl0ZW0pCiAgICAgICAgICBjb25zb2xlLmxvZygid29ydCBiZWFyYmVpdGV0IikKICAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMuZWRpdGVkSXRlbSkKICAgICAgICB9IGVsc2UgewogICAgICAgICAgLy8gZWRpdGVkSW5kZXggc2VlbXMgdG8gYmUgZW1wdHkKICAgICAgICAgLy8gY2FsbGVkIHdoZW4gd29yZHMgZ2V0IGFkZGVkCiAgICAgICAgICB0aGlzLndvcmRzLnB1c2godGhpcy5lZGl0ZWRJdGVtKQogICAgICAgICAgdGhpcy5hZGRXb3JkKHRoaXMuZWRpdGVkSXRlbSwgdGhpcy5saXN0X2lkKQogICAgICAgIH0KICAgICAgICAvLyBjbG9zZSBkaWFsb2dlCiAgICAgICAgdGhpcy5jbG9zZSgpCiAgICAgIH0sCiAgICB9LAogIH0K"},{"version":3,"sources":["curd_table.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"curd_table.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <v-data-table\n      :headers=\"headers\"\n      :items=\"words\"\n      sort-by=\"calories\"\n      class=\"elevation-2\"\n      >\n      <template v-slot:top>\n        <v-toolbar\n          flat\n        >\n          <v-toolbar-title>{{list_name }}</v-toolbar-title>\n          \n          <v-divider\n            class=\"mx-4\"\n            inset\n            vertical\n          ></v-divider>\n          <v-spacer></v-spacer>\n          <v-dialog\n            v-model=\"dialog\"\n            max-width=\"500px\"\n          >\n            <template v-slot:activator=\"{ on, attrs }\">\n              <v-btn\n              color=\"red\"\n              dark\n              class=\"mb-2 ml-4\"\n              @click=\"deleteList\"\n              >\n              Liste löschen\n              </v-btn>\n\n              <v-btn\n                color=\"primary\"\n                dark\n                class=\"mb-2\"\n                v-bind=\"attrs\"\n                v-on=\"on\"\n              >\n                Hinzufügen\n              </v-btn>\n            </template>\n            \n            <v-card>\n              <v-card-title>\n                <span class=\"headline\">{{ formTitle }}</span>\n              </v-card-title>\n\n              <v-card-text>\n                <v-container>\n                  <v-row>\n                    <v-col\n                      cols=\"12\"\n                      sm=\"6\"\n                      md=\"4\"\n                    >\n                      <v-text-field\n                        v-model=\"editedItem.de\"\n                        label=\"Deutsches Wort\"\n                      ></v-text-field>\n                    </v-col>\n                    <v-col\n                      cols=\"12\"\n                      sm=\"6\"\n                      md=\"4\"\n                    >\n                      <v-text-field\n                        v-model=\"editedItem.en\"\n                        label=\"Englisches Wort\"\n                      ></v-text-field>\n                    </v-col>\n                  </v-row>\n                </v-container>\n              </v-card-text>\n\n              <v-card-actions>\n                <v-spacer></v-spacer>\n                                <v-btn\n                  color=\"blue darken-1\"\n                  text\n                  @click=\"save\"\n                >\n                  Speichern\n                </v-btn>                \n                <v-btn\n                  color=\"blue darken-1\"\n                  text\n                  @click=\"close\"\n                >\n                  Abbrechen\n                </v-btn>\n              </v-card-actions>\n            </v-card>\n          </v-dialog>\n          <v-dialog v-model=\"dialogDelete\" max-width=\"500px\">\n            <v-card>\n              <v-card-title class=\"headline\">Willst du wirklich {{ editedItem.en}} / {{ editedItem.de }} löschen?</v-card-title>\n              <v-card-actions>\n                <v-spacer></v-spacer>\n                <v-btn color=\"blue darken-1\" text @click=\"deleteItemConfirm\">Ja</v-btn>\n                <v-btn color=\"blue darken-1\" text @click=\"closeDelete\">Abbrechen</v-btn>\n\n                <v-spacer></v-spacer>\n              </v-card-actions>\n            </v-card>\n          </v-dialog>\n          <v-dialog v-model=\"dialogDeleteList\" max-width=\"500px\">\n            <v-card>\n              <v-card-title class=\"headline\">Willst du wirklich {{ list_name }} löschen? </v-card-title>\n              <v-card-actions>\n                <v-spacer></v-spacer>\n                <v-btn color=\"blue darken-1\" text @click=\"deleteListConfirm\">Ja</v-btn>\n                <v-btn color=\"blue darken-1\" text @click=\"closeDelete\">Abbrechen</v-btn>                \n                <v-spacer></v-spacer>\n              </v-card-actions>\n            </v-card>\n          </v-dialog>\n        </v-toolbar>\n      </template>\n\n      <template v-slot:item.actions=\"{ item }\">\n        <v-icon\n          small\n          class=\"mr-2\"\n          @click=\"editItem(item)\"\n        >\n          mdi-pencil\n        </v-icon>\n        <v-icon\n          small\n          @click=\"deleteItem(item)\"\n        >\n          mdi-delete\n        </v-icon>\n      </template>\n\n    </v-data-table>\n</template>\n<script>\nimport axios from 'axios'\nimport config from '../../config'\nimport user_store from '../store/user'\n    export default {\n      props: ['words', 'list_name', 'list_id'],\n      data: () => ({\n      condition: false,\n      dialog: false,\n      dialogDelete: false,\n      dialogDeleteList: false,\n      headers: [\n        {\n          text: 'Deutsch',\n          align: 'start',\n          sortable: true,\n          value: 'de',\n        },\n        { text: 'Englisch', value: 'en' },\n        { text: 'Actions', value: 'actions', sortable: true },\n      ],\n      editedIndex: -1,\n      editedItem: {\n        de: '',\n        en: '',\n        id: '',\n      },\n      defaultItem: {\n        de: '',\n        en: '',\n      },\n    }),\n\n    computed: {\n      formTitle () {\n        return this.editedIndex === -1 ? 'Wörter Hinzufügen' : 'Bearbeiten'\n      },\n    },\n\n    watch: {\n      dialog (val) {\n        val || this.close()\n      },\n      dialogDelete (val) {\n        val || this.closeDelete()\n      },\n    },\n\n    methods: {\n\n      \n\n      updateWord(word){\n        var user = user_store.getters.user\n          axios.patch(`${config.protocol}://${config.hostname}/update_wordlist`, {\n                        headers: {'Content-Type': 'application/json'},\n                        word,\n                        user\n\n                    })\n                        .then( response => {\n                            console.log(response.data);  \n                        })\n                        .catch(function (error) {\n                          console.log(error)\n                        });\n      },\n\n      // takes the word, list_id of the word and reads user from store\n      // creates event to update the component\n      addWord(word, list_id){\n        var user = user_store.getters.user\n        axios.put(`${config.protocol}://${config.hostname}/update_wordlist`, {\n          \n                        headers: {'Content-Type': 'application/json'},\n                        word,\n                        user,\n                        list_id\n                        \n\n                    })\n                        .then( response => {\n                            console.log(response.data)  \n                            // need to update the cached list, because a new ui for the created word needs to be generated\n                            this.$emit(\"update\", response.data)\n                        })\n                        .catch(function (error) {\n                          console.log(error)\n                        });\n      },\n\n      deleteWord(word){\n        // read user from store\n        var user = user_store.getters.user\n                // axios wants the data to be deleted inside the data Object... https://stackoverflow.com/a/53263784\n                console.log(word)\n                axios.delete(`${config.protocol}://${config.hostname}/update_wordlist`, {                        \n                        data:{\n                          user,\n                          word\n                        }\n\n\n                    })\n                        .then( response => {\n                            console.log(response.data);  \n                        })\n                        .catch(function (error) {\n                          console.log(error)\n                        });\n      },\n      \n    \n   \n      // edit word pair in Object words\n      // item = selected element\n      editItem (item) {\n        this.editedIndex = this.words.indexOf(item)\n        this.editedItem = Object.assign({}, item)\n        this.dialog = true\n      },\n      \n      // delete word pair in Object words\n      // item = selected element\n      deleteItem (item) {\n        this.editedIndex = this.words.indexOf(item)\n        this.editedItem = Object.assign({}, item)\n        this.dialogDelete = true\n      },\n      // show \"do you wanna realy delete\" panel\n      deleteList(){\n        this.dialogDeleteList = true\n  \n      },\n\n      // create event to delete words[]\n      // component gets refreshed by parrent \n      deleteListConfirm(){\n        // this.words = \"\"\n        this.$emit(\"delete-list\", this.list_id)\n        this.dialogDeleteList = false\n      },\n\n      // remove element from words[]\n      deleteItemConfirm () {\n        this.words.splice(this.editedIndex, 1)\n        console.log(\"Delete\")\n        this.deleteWord(this.editedItem)\n        this.closeDelete()\n      },\n\n      // closes edit words panel\n      close () {\n        this.dialog = false\n        this.$nextTick(() => {\n          this.editedItem = Object.assign({}, this.defaultItem)\n          this.editedIndex = -1\n        })\n      },\n\n      // close delete words panel\n      closeDelete () {\n        this.dialogDelete = false\n        this.$nextTick(() => {\n          this.editedItem = Object.assign({}, this.defaultItem)\n          this.editedIndex = -1\n\n        })\n      },\n\n      save () {\n        if (this.editedIndex > -1) {\n          // called when words get edited\n          // existing words are in the editedIndex range from 0 to n+1\n          Object.assign(this.words[this.editedIndex], this.editedItem)\n          this.updateWord(this.editedItem)\n          console.log(\"wort bearbeitet\")\n          console.log(this.editedItem)\n        } else {\n          // editedIndex seems to be empty\n         // called when words get added\n          this.words.push(this.editedItem)\n          this.addWord(this.editedItem, this.list_id)\n        }\n        // close dialoge\n        this.close()\n      },\n    },\n  }\n</script>"]}]}